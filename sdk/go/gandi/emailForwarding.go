// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gandi

import (
	"context"
	"reflect"

	"errors"
	"github.com/pczora/pulumi-gandi/sdk/go/gandi/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deprecated: gandi.index/emailforwarding.EmailForwarding has been deprecated in favor of gandi.email/forwarding.Forwarding
type EmailForwarding struct {
	pulumi.CustomResourceState

	// Forwards to email addresses
	Destinations pulumi.StringArrayOutput `pulumi:"destinations"`
	// Account alias name
	Source pulumi.StringOutput `pulumi:"source"`
}

// NewEmailForwarding registers a new resource with the given unique name, arguments, and options.
func NewEmailForwarding(ctx *pulumi.Context,
	name string, args *EmailForwardingArgs, opts ...pulumi.ResourceOption) (*EmailForwarding, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destinations == nil {
		return nil, errors.New("invalid value for required argument 'Destinations'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EmailForwarding
	err := ctx.RegisterResource("gandi:index/emailForwarding:EmailForwarding", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailForwarding gets an existing EmailForwarding resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailForwarding(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailForwardingState, opts ...pulumi.ResourceOption) (*EmailForwarding, error) {
	var resource EmailForwarding
	err := ctx.ReadResource("gandi:index/emailForwarding:EmailForwarding", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailForwarding resources.
type emailForwardingState struct {
	// Forwards to email addresses
	Destinations []string `pulumi:"destinations"`
	// Account alias name
	Source *string `pulumi:"source"`
}

type EmailForwardingState struct {
	// Forwards to email addresses
	Destinations pulumi.StringArrayInput
	// Account alias name
	Source pulumi.StringPtrInput
}

func (EmailForwardingState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailForwardingState)(nil)).Elem()
}

type emailForwardingArgs struct {
	// Forwards to email addresses
	Destinations []string `pulumi:"destinations"`
	// Account alias name
	Source string `pulumi:"source"`
}

// The set of arguments for constructing a EmailForwarding resource.
type EmailForwardingArgs struct {
	// Forwards to email addresses
	Destinations pulumi.StringArrayInput
	// Account alias name
	Source pulumi.StringInput
}

func (EmailForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailForwardingArgs)(nil)).Elem()
}

type EmailForwardingInput interface {
	pulumi.Input

	ToEmailForwardingOutput() EmailForwardingOutput
	ToEmailForwardingOutputWithContext(ctx context.Context) EmailForwardingOutput
}

func (*EmailForwarding) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailForwarding)(nil)).Elem()
}

func (i *EmailForwarding) ToEmailForwardingOutput() EmailForwardingOutput {
	return i.ToEmailForwardingOutputWithContext(context.Background())
}

func (i *EmailForwarding) ToEmailForwardingOutputWithContext(ctx context.Context) EmailForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailForwardingOutput)
}

// EmailForwardingArrayInput is an input type that accepts EmailForwardingArray and EmailForwardingArrayOutput values.
// You can construct a concrete instance of `EmailForwardingArrayInput` via:
//
//	EmailForwardingArray{ EmailForwardingArgs{...} }
type EmailForwardingArrayInput interface {
	pulumi.Input

	ToEmailForwardingArrayOutput() EmailForwardingArrayOutput
	ToEmailForwardingArrayOutputWithContext(context.Context) EmailForwardingArrayOutput
}

type EmailForwardingArray []EmailForwardingInput

func (EmailForwardingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailForwarding)(nil)).Elem()
}

func (i EmailForwardingArray) ToEmailForwardingArrayOutput() EmailForwardingArrayOutput {
	return i.ToEmailForwardingArrayOutputWithContext(context.Background())
}

func (i EmailForwardingArray) ToEmailForwardingArrayOutputWithContext(ctx context.Context) EmailForwardingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailForwardingArrayOutput)
}

// EmailForwardingMapInput is an input type that accepts EmailForwardingMap and EmailForwardingMapOutput values.
// You can construct a concrete instance of `EmailForwardingMapInput` via:
//
//	EmailForwardingMap{ "key": EmailForwardingArgs{...} }
type EmailForwardingMapInput interface {
	pulumi.Input

	ToEmailForwardingMapOutput() EmailForwardingMapOutput
	ToEmailForwardingMapOutputWithContext(context.Context) EmailForwardingMapOutput
}

type EmailForwardingMap map[string]EmailForwardingInput

func (EmailForwardingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailForwarding)(nil)).Elem()
}

func (i EmailForwardingMap) ToEmailForwardingMapOutput() EmailForwardingMapOutput {
	return i.ToEmailForwardingMapOutputWithContext(context.Background())
}

func (i EmailForwardingMap) ToEmailForwardingMapOutputWithContext(ctx context.Context) EmailForwardingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailForwardingMapOutput)
}

type EmailForwardingOutput struct{ *pulumi.OutputState }

func (EmailForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailForwarding)(nil)).Elem()
}

func (o EmailForwardingOutput) ToEmailForwardingOutput() EmailForwardingOutput {
	return o
}

func (o EmailForwardingOutput) ToEmailForwardingOutputWithContext(ctx context.Context) EmailForwardingOutput {
	return o
}

// Forwards to email addresses
func (o EmailForwardingOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EmailForwarding) pulumi.StringArrayOutput { return v.Destinations }).(pulumi.StringArrayOutput)
}

// Account alias name
func (o EmailForwardingOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailForwarding) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

type EmailForwardingArrayOutput struct{ *pulumi.OutputState }

func (EmailForwardingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailForwarding)(nil)).Elem()
}

func (o EmailForwardingArrayOutput) ToEmailForwardingArrayOutput() EmailForwardingArrayOutput {
	return o
}

func (o EmailForwardingArrayOutput) ToEmailForwardingArrayOutputWithContext(ctx context.Context) EmailForwardingArrayOutput {
	return o
}

func (o EmailForwardingArrayOutput) Index(i pulumi.IntInput) EmailForwardingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailForwarding {
		return vs[0].([]*EmailForwarding)[vs[1].(int)]
	}).(EmailForwardingOutput)
}

type EmailForwardingMapOutput struct{ *pulumi.OutputState }

func (EmailForwardingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailForwarding)(nil)).Elem()
}

func (o EmailForwardingMapOutput) ToEmailForwardingMapOutput() EmailForwardingMapOutput {
	return o
}

func (o EmailForwardingMapOutput) ToEmailForwardingMapOutputWithContext(ctx context.Context) EmailForwardingMapOutput {
	return o
}

func (o EmailForwardingMapOutput) MapIndex(k pulumi.StringInput) EmailForwardingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailForwarding {
		return vs[0].(map[string]*EmailForwarding)[vs[1].(string)]
	}).(EmailForwardingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailForwardingInput)(nil)).Elem(), &EmailForwarding{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailForwardingArrayInput)(nil)).Elem(), EmailForwardingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailForwardingMapInput)(nil)).Elem(), EmailForwardingMap{})
	pulumi.RegisterOutputType(EmailForwardingOutput{})
	pulumi.RegisterOutputType(EmailForwardingArrayOutput{})
	pulumi.RegisterOutputType(EmailForwardingMapOutput{})
}
