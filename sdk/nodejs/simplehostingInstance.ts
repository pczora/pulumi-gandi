// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * @deprecated gandi.index/simplehostinginstance.SimplehostingInstance has been deprecated in favor of gandi.simplehosting/instance.Instance
 */
export class SimplehostingInstance extends pulumi.CustomResource {
    /**
     * Get an existing SimplehostingInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SimplehostingInstanceState, opts?: pulumi.CustomResourceOptions): SimplehostingInstance {
        pulumi.log.warn("SimplehostingInstance is deprecated: gandi.index/simplehostinginstance.SimplehostingInstance has been deprecated in favor of gandi.simplehosting/instance.Instance")
        return new SimplehostingInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gandi:index/simplehostingInstance:SimplehostingInstance';

    /**
     * Returns true if the given object is an instance of SimplehostingInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SimplehostingInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SimplehostingInstance.__pulumiType;
    }

    /**
     * The name of the database type ('mysql' or 'pgsql')
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * The name of the language ('php', 'python', 'nodejs' or 'ruby')
     */
    public readonly languageName!: pulumi.Output<string>;
    /**
     * The datacenter location of the instance ('FR' or 'LU')
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the SimpleHosting instance
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The size of the SimpleHosting instance ('s+', 'm', 'l' or 'xxl')
     */
    public readonly size!: pulumi.Output<string>;

    /**
     * Create a SimplehostingInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated gandi.index/simplehostinginstance.SimplehostingInstance has been deprecated in favor of gandi.simplehosting/instance.Instance */
    constructor(name: string, args: SimplehostingInstanceArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated gandi.index/simplehostinginstance.SimplehostingInstance has been deprecated in favor of gandi.simplehosting/instance.Instance */
    constructor(name: string, argsOrState?: SimplehostingInstanceArgs | SimplehostingInstanceState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("SimplehostingInstance is deprecated: gandi.index/simplehostinginstance.SimplehostingInstance has been deprecated in favor of gandi.simplehosting/instance.Instance")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SimplehostingInstanceState | undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["languageName"] = state ? state.languageName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
        } else {
            const args = argsOrState as SimplehostingInstanceArgs | undefined;
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.languageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'languageName'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.size === undefined) && !opts.urn) {
                throw new Error("Missing required property 'size'");
            }
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["languageName"] = args ? args.languageName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["size"] = args ? args.size : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SimplehostingInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SimplehostingInstance resources.
 */
export interface SimplehostingInstanceState {
    /**
     * The name of the database type ('mysql' or 'pgsql')
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The name of the language ('php', 'python', 'nodejs' or 'ruby')
     */
    languageName?: pulumi.Input<string>;
    /**
     * The datacenter location of the instance ('FR' or 'LU')
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the SimpleHosting instance
     */
    name?: pulumi.Input<string>;
    /**
     * The size of the SimpleHosting instance ('s+', 'm', 'l' or 'xxl')
     */
    size?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SimplehostingInstance resource.
 */
export interface SimplehostingInstanceArgs {
    /**
     * The name of the database type ('mysql' or 'pgsql')
     */
    databaseName: pulumi.Input<string>;
    /**
     * The name of the language ('php', 'python', 'nodejs' or 'ruby')
     */
    languageName: pulumi.Input<string>;
    /**
     * The datacenter location of the instance ('FR' or 'LU')
     */
    location: pulumi.Input<string>;
    /**
     * The name of the SimpleHosting instance
     */
    name?: pulumi.Input<string>;
    /**
     * The size of the SimpleHosting instance ('s+', 'm', 'l' or 'xxl')
     */
    size: pulumi.Input<string>;
}
